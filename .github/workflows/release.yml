name: release

on:
  push:
    tags:
     - v[0-9]+.[0-9]+.[0-9]+*
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_TARGET: x86_64-unknown-linux-musl

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build toml cli
      # uses: juankaram/rust-musl-action@master
      uses: gmiam/rust-musl-action@master
      with:
        args: cargo build --target $RUST_TARGET --release
    - name: store-artifacts
      uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: toml-artifacts-linux
        path: |
          target/${{ env.RUST_TARGET }}/release/toml

  prepare-tarball-linux:
    runs-on: ubuntu-latest
    needs: [build-linux]
    steps:
    - name: download artifacts
      uses: actions/download-artifact@v2
      with:
        name: toml-artifacts-linux
        path: toml-cli
    - name: prepare release tarball
      run: |
        tag=$(echo $GITHUB_REF | cut -d/ -f3-)
        tarball="toml-cli-$tag-linux-amd64.tgz"
        chmod +x toml-cli/*
        tar cf - toml-cli | gzip > ${tarball}
        echo "tarball=${tarball}" >> $GITHUB_ENV

        shasum="$tarball.sha256sum"
        sha256sum $tarball > $shasum
        echo "tarball_shasum=${shasum}" >> $GITHUB_ENV
    - name: store-artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release-tarball
        path: |
          ${{ env.tarball }}
          ${{ env.tarball_shasum }}

  create-release:
    runs-on: ubuntu-latest
    needs: [prepare-tarball-linux]
    steps:
    - name: download artifacts
      uses: actions/download-artifact@v2
      with:
        name: release-tarball
        path: tarballs
    - name: prepare release env
      run: |
        echo "tarballs<<EOF" >> $GITHUB_ENV
        for I in $(ls tarballs);do echo "tarballs/${I}" >> $GITHUB_ENV; done
        echo "EOF" >> $GITHUB_ENV
        tag=$(echo $GITHUB_REF | cut -d/ -f3-)
        echo "tag=${tag}" >> $GITHUB_ENV
        cat $GITHUB_ENV
    - name: push release
      if: github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        name: "Toml cli ${{ env.tag }}"
        body: |
          "Toml cli release ${{ env.tag }}"
        generate_release_notes: true
        files: |
          ${{ env.tarballs }}
